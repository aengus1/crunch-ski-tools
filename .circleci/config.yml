version: 2.1

commands:
  setup:
    description: Setup Gradle Environment
    steps:
      - run: chmod +x gradlew
      - run: export GRADLEW_USER_HOME=`pwd`:/.gradle

  restore-cache:
    steps:
      - restore_cache:
          keys:
            - gradle-cache-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
            - gradle-cache-v1-{{ .Branch }}
            - gradle-cache-v1

  save-cache:
    steps:
      - save_cache:
          key: gradle-cache-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle
  gbuild:
    description: Gradle Build
    steps:
      - run: ./gradlew build -Preckon.scope=minor -Preckon.stage=rc -PgitlabAccessToken=${GITLAB_ACCESS_TOKEN}

  test:
    description: Gradle Unit test
    steps:
      - run: ./gradlew check -PgitlabAccessToken=${GITLAB_ACCESS_TOKEN}

  release:
    description: Publish to Artifact Repository
    steps:
      - run: git config user.email "aengus.mccullough@gmail.com"
      - run: git config user.name "CI Robot"
      - run: ./gradlew reckonTagPush -Preckon.scope=minor -Preckon.stage=rc -PgitlabAccessToken=${GITLAB_ACCESS_TOKEN}
      - run: ./gradlew publish -PgitlabAccessToken=${GITLAB_ACCESS_TOKEN}

  extract_version:
    description: Parse Version Name from library
    steps:
      - run: |
          jar=`ls build/libs`
          echo `basename -s .jar ${jar:6}` > build/libs/version.txt

  install_deps:
    description: Install Docker Image Deps
    steps:
      - run: |
          apk add --no-cache \
          py-pip=9.0.0-r1
          pip install \
          docker-compose==1.12.0 \
          awscli==1.11.76


jobs:
  buildJar:
    docker:
      - image: circleci/openjdk:11-jdk-buster-node
    working_directory: /home/circleci/repo
    steps:
      - checkout
      - setup
      - add_ssh_keys:
          fingerprints:
            - "52:95:61:f3:cd:7a:d0:6a:10:fe:58:36:21:ef:c5:40"
      - restore-cache
      - gbuild
      - extract_version
      - persist_to_workspace:
          root: build
          paths:
            - libs
      - test
      - release
      - save-cache
  release:
    docker:
      - image: circleci/openjdk:11-jdk-buster-node
    working_directory: /home/circleci/repo
    steps:
      - checkout
      - setup
      - add_ssh_keys:
          fingerprints:
            - "52:95:61:f3:cd:7a:d0:6a:10:fe:58:36:21:ef:c5:40"
      - restore_cache
      - run: mkdir build
      - attach_workspace:
          at: /home/circleci/repo/build
      - release

  buildDockerImage:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: /home/circleci/repo
    steps:
      - checkout
      - setup_remote_docker
      - install_deps
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run: mkdir build
      - attach_workspace:
          at: /home/circleci/repo/build
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      - store_artifacts:
          path: /caches/app.tar
          destination: docker-image
      - run:
          name: Publish to Docker registry
          command: |
            TAG=`cat build/libs/version.txt`
            echo $TAG
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker image tag app:latest ${DOCKER_USER}/crunch-ski-tools:${TAG}
            docker image push ${DOCKER_USER}/crunch-ski-tools:${TAG}

workflows:
  version: 2.1
  standard_workflow:
    jobs:
      - buildJar:
          context: tools-context
      - release:
          context: tools-context
          requires: buildJar
          branches:
            only: master
      - buildDockerImage:
          context: tools-context
          requires:
            - release
          branches:
            only: master